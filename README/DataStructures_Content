0.Basic informations.
1. Abstract data Types
2. Linear data structures
	2.1 Arrays
	2.2 Types of Lists
3. Trees
	3.1 Binary Trees
	3.2 B-trees
	3.3 Heaps
	3.4 Trees
	3.5 Multiway trees
	3.6 Space-partitioning trees
	3.7 Application-specific trees
4. Hashes
5. Graphs
6. Other



[Basic Informations]

This file contains probably all possible data structures. 
Most of them not implemented now. Im marked 
implemented structures with start characted (*). 


[Abstract data types][1]
	Container
*	List
	Associative array
	Multimap
	Set
	Bag
	Multiset
	Stack
	Queue
	Double-ended queue
	Priority queue
	Tree
	Graph

	
[Linear data structures][2]
	Arrays[2.1]
*		Array
		Bit array
		Bit field
		Bitboard
		Bitmap
		Circular buffer
		Control table
		Image
		Dope vector
		Dynamic array
		Gap buffer
		Hashed array tree
		Heightmap
		Lookup table
		Matrix
		Parallel array
		Sorted array
		Sparse matrix
		Iliffe vector
		Variable-length array
	Types of Lists[2.2]
		Doubly linked list
*		Array list
*		Linked list
*		Self-organizing list
*		Skip list
		Unrolled linked list
		VList
		Conc-Tree list
		Xor linked list
		Zipper
		Doubly connected edge list
		Difference list
		Free list
		
[Trees][3]
	
	Binary trees [3.1]
		AA tree
	*	AVL tree
	*	Binary search tree 
		Binary tree
		Cartesian tree
		Left-child right-sibling binary tree
		Order statistic tree
		Pagoda
		Randomized binary search tree
		Red–black tree
		Rope
		Scapegoat tree
		Self-balancing binary search tree
		Splay tree
		T-tree
		Tango tree
		Threaded binary tree
		Top tree
		Treap
		WAVL tree
		Weight-balanced tree
	
	B-trees[3.2]
		B-tree
		B+ tree
		B*-tree
		B sharp tree
		Dancing tree
		2-3 tree
		2-3-4 tree
		Queap
		Fusion tree
		Bx-tree
		AList
	
	Heaps[3.3]
	*	Heap
		Binary heap
		Weak heap
		Binomial heap
		Fibonacci heap
		AF-heap
		Leonardo Heap
		2-3 heap
		Soft heap
		Pairing heap
		Leftist heap
		Treap
		Beap
		Skew heap
		Ternary heap
		D-ary heap
		Brodal queue
		
	Trees[3.4]
		Trie
		Radix tree
		Suffix tree
		Suffix array
		Compressed suffix array
		FM-index
		Generalised suffix tree
		B-trie
		Judy array
		X-fast trie
		Y-fast trie
		Merkle Tree
		Ctrie
	
	Multiway trees[3.5]
		Ternary tree
		K-ary tree
		And–or tree
		(a,b)-tree
		Link/cut tree
		SPQR-tree
		Spaghetti stack
		Disjoint-set data structure
		Fusion tree
		Enfilade
		Exponential tree
		Fenwick tree
		Van Emde Boas tree
		Rose tree

	Space-partitioning trees[3.6]
		Segment tree
		Interval tree
		Range tree
		Bin
		K-d tree
		Implicit k-d tree
		Min/max k-d tree
		Relaxed k-d tree
		Adaptive k-d tree
		Quadtree
		Octree
		Linear octree
		Z-order
		UB-tree
		R-tree
		R+ tree
		R* tree
		Hilbert R-tree
		X-tree
		Metric tree
		Cover tree
		M-tree
		VP-tree
		BK-tree
		Bounding interval hierarchy
		Bounding volume hierarchy
		BSP tree
		Rapidly exploring random tree
		
	Application-specific trees
		Abstract syntax tree
		Parse tree
		Decision tree
		Alternating decision tree
		Minimax tree
		Expectiminimax tree
		Finger tree
		Expression tree
		Log-structured merge-tree
		Lexicographic Search Tree
		
[Hashes][4]
	Count-Min sketch
	Distributed hash table
*	Double Hashing
	Dynamic perfect hash table
	Hash array mapped trie
	Hash list
*	Hash table
	Hash tree
	Hash trie
	Koorde
	Prefix hash tree
	Rolling hash
	MinHash
	Quotient filter
	Ctrie
	
[Graphs][5]
	Graph
	Adjacency list
	Adjacency matrix
	Graph-structured stack
	Scene graph
	Binary decision diagram
	Zero-suppressed decision diagram
	And-inverter graph
	Directed graph
	Directed acyclic graph
	Propositional directed acyclic graph
	Multigraph
	Hypergraph
	
[Other][6]
	Lightmap
	Winged edge
	Doubly connected edge list
	Quad-edge
	Routing table
	Symbol table